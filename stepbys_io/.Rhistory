library(stringr)
a <- "양념감자\n핡\n"
str_dup(a,10)
str_dup(a,10)
library(stringr)
a <- "양념감자\n핡\n"
library(stringr)
a <- "양념감자\n핡\n"
str_dup(a,10)
a <- "abcdefASFGASDF12345"
str_replace_all(a,'[A-z]','')
a
str_replace_all(a,'[a-Z]','')
a2 <- 'apple'+'/'+'is'
# 이거 안됨 a2 <- 'apple'+'/'+'is'
a2 <- str_c('apple','/','is')
# 이거 안됨 a2 <- 'apple'+'/'+'is'
a2 <- str_c('apple','/','is'); a2
# 이거 안됨 a2 <- 'apple'+'/'+'is'
a2 <- str_c('apple','/','is','/','a'); a2
str_split(a,'/')
str_split(a2,'/')
# 이거 안됨 a2 <- 'apple'+'/'+'is'
a2 <- str_c('   apple','/','is','/','a   '); a2
str_split(a2,'/')
a2
str_sub(a2, start=1, end= 3)
str_sub(a2, start=10, end= 13)
a3 <- str_split(a2,'/')
str_sub(a3, start=1, end= 3)
a3
str_sub(a3, start=1, end= 3)
str_sub(a3, start=1, end= 13)
library(googleVis)
fruit
Fruits
aggregate(Sales~Year, Fruits, min)
aggregate(Sales~Fruit, Fruits, median)
aggregate(Sales~Fruit+Year, Fruits, median)
cbind(aggregate(Sales~Fruit+Year, Fruits, median)
,aggregate(Sales~Fruit+Year, Fruits, mean)
)
cbind(aggregate(Sales~Fruit+Year, Fruits, median)
,aggregate(Sales~Fruit+Year, Fruits, sum)
)
aggregate(Sales~Year, Fruits, mean)
aggregate(Sales~Fruit, Fruits, median)
cbind(aggregate(Sales~Fruit+Year, Fruits, mean)
,aggregate(Sales~Fruit+Year, Fruits, median)
)
cbind(aggregate(Sales~Year, Fruits, mean)
,aggregate(Sales~Fruit, Fruits, median)
)
cbind(aggregate(Sales~Fruit, Fruits, mean)
,aggregate(Sales~Fruit, Fruits, median)
)
cbind(aggregate(Sales~Fruit, Fruits, mean)
,aggregate(Sales~Fruit, Fruits, median)$Sales
)
mat1 <- matrix(c(1,2,3,4,5,6), nrow=2)
mat1
mat1 <- matrix(c(1,2,3,4,5,6), nrow=2, ncol=3)
mat1
mat1 <- matrix(c(1,2,3,4,5,6), nrow=2)
mat1 <- matrix(c(1,2,3,4,5,6), nrow=2)
mat1
str_split(str1,"/")
str1 <- "a/p/c"
str_split(str1,"/")
library(stringr)
str_split(str1,"/")
typeof(str_split(str1,"/"))
str1 <- "  a/p/c  "
str_trim(str1, "left")
mat1 <- matrix(c(1,2,3,4,5,6), nrow=2, byrow= T)
mat1
mat1 <- matrix(c(1,2,3,4,5,6), nrow=2)
mat1
str_trim(str1, left)
str_trim(str1, "left")
str_replace_all('a??????abc???daa??','\?\?','?')
str_replace_all('a??????abc???daa??','??','?')
str_replace_all('a??????abc???daa??',"?+","?")
str_replace_all('a??????abc???daa??',\?+,"?")
str_replace_all('a??????abc???daa??',"\?+","?")
str_replace_all('a??????abc???daa??',?+,"?")
str_replace_all('a??????abc???daa??',"[?]+","?")
str_replace_all('a??????abc???daa??',"\?+","?")
str_replace_all('a??????abc???daa??',"\\?+","?")
str_replace_all('a??????abc???daa??',"\\?\\?","?")
str_replace_all('a??????abc???daa??',"(\\?)\\?+",'\\1')
str_replace_all('a??????abc???daa??',"\\?\\?","")
df1 <- as.data.frame(
abs_i= c(3,2,1,0,1,2,3),
i= c(3,2,1,0,-1,-2,-3),
c3= c(0,1,3,5,3,1,0),
n= c(7,7,7,7,7,7,7)
)
df1 <- as.data.frame(
abs_i= c(3,2,1,0,1,2,3),
i= c(3,2,1,0,-1,-2,-3),
c3= c(0,1,3,5,3,1,0),
n= c(7,7,7,7,7,7,7)
)
df1 <- data.frame(
abs_i= c(3,2,1,0,1,2,3),
i= c(3,2,1,0,-1,-2,-3),
c3= c(0,1,3,5,3,1,0),
n= c(7,7,7,7,7,7,7)
)
df1
lm(c3~abs_i+i+n)
lm(c3~abs_i+i+n, df1)
df2 <- data.frame(
abs_i= c(2,1,0,1,2),
i= c(2,1,0,-1,-2),
c3= c(1,3,5,3,1),
n= c(7,7,7,7,7)
)
df2
lm(c3~abs_i+i+n, df2)
lm(c3~abs_i, df2)
df2 <- data.frame(
abs_i= c(2,1,0,1,2),
i= c(2,1,0,-1,-2),
c3= c(1,3,5,3,1),
n= c(7,7,7,7,7)
)
df3_5
df3_5 <- data.frame(
abs_i= c(1,0,1),
i= c(1,0,-1),
c3= c(1,3,1),
n= c(5,5,5)
)
df3_5
lm(c3~., df3_5)
lm(c3~abs_i, df3_5)
lm(c3~., df2)
lm(c3~., df3_5)
## 신세계다 ㅋㅋㅋㅋㅋㅋㅋㅋ
## 빈 다이아 중간 공백 몇 개 출력해야 하느냐
## abs_i: abs(i), i: index, c3: 중간공백 수, n: 몇 줄짜리 다이아
df1 <- data.frame(
abs_i= c(3,2,1,0,1,2,3),
i= c(3,2,1,0,-1,-2,-3),
c3= c(0,1,3,5,3,1,0),
n= c(7,7,7,7,7,7,7)
)
df3_5 <- data.frame(
abs_i= c(1,0,1),
i= c(1,0,-1),
c3= c(1,3,1),
n= c(5,5,5)
)
lm(c3~., df2)
lm(c3~., df3_5)
lm(c3~abs_i, df2)
lm(c3~., df3_5)
lm(c3~abs_i, df3_5)
str_locate('anaconda','a')
library(stringr)
str_locate_all('anaconda','a')
str_locate('anaconda','a')
11*5+2*3
(11*5+2*3)*1.25
(11*5)*1.25
a <- ()
a <- []
a <- [1]
a <- c(1)
a[1]
a[3] <- 5
a
??str_detect_all
library(stringr)
??str_detect_all
??str_detect
??str_detect_all
??str_detect
??str_detect_all
# a= readLines("stdin")
data= readLines("data/text1.txt")
setwd("baekjoon/stepbys")
# a= readLines("stdin")
data= readLines("data/text1.txt")
cat(data, sep="\n")
# input <- file('stdin','r')
row <- readLines(input,n=1)
# input <- file('stdin','r')
# row <- readLines(input,n=1)
row <- readLine()
# input <- file('stdin','r')
# row <- readLines(input,n=1)
row <- readline()
write(Map(as.numeric, strsplit(row,""))[[1]],"")
# input <- file('stdin','r')
# row <- readLines(input,n=1)
row <- readline()
write(Map(as.numeric, strsplit(row,""))[[1]],"")
# input <- file('stdin','r')
# row <- readLines(input,n=1)
data <- readline()
eleList <- Map(as.numeric, strsplit(data,""))
write(eleList[[1]],"")
write(eleList)
# input <- file('stdin','r')
# row <- readLines(input,n=1)
file <- readline()
eleList <- Map(as.numeric, strsplit(file,""))
write(eleList)
write(eleList, "")
write(eleList[[1]],"")
# input <- file('stdin','r')
# row <- readLines(input,n=1)
line <- readline()
eleList <- Map(as.numeric, strsplit(line,""))
whos
write(eleList[[2]], "")
write(eleList[[1]])
write(eleList[[1]],"")
write(eleList[[1]][1],"")
write(eleList[[1]][2],"")
write(eleList[[1]][3],"")
# input <- file('stdin','r')
# row <- readLines(input,n=1)
line <- readline()
eleList <- Map(as.numeric, strsplit(line," "))
write(eleList[[1]],"")
write(eleList[[1]][1],"")
write(eleList[[1]][2],"")
write(eleList[[1]][3],"")
write(eleList[[1]][1]- eleList[[1]][2])
write(eleList[[1]][1]- eleList[[1]][2], "")
#test
line <- readline()
eleList <- Map(as.numeric, strsplit(line," "))
write(eleList[[1]][1]*eleList[[1]][2])
write(eleList[[1]][1]*eleList[[1]][2],"")
